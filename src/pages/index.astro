---
export const prerender = false;

const defaultLang = 'en';
const supportedLanguages = ['en', 'pl'];

function getBrowserLanguage(acceptLanguage: string | null) {
  if (!acceptLanguage) return defaultLang;
  
  // Get the first part of complex language codes (e.g., 'en-US' -> 'en')
  const browserLang = acceptLanguage.split(',')[0].trim().split('-')[0].toLowerCase();
  
  return supportedLanguages.includes(browserLang) ? browserLang : defaultLang;
}

const acceptLanguage = Astro.request.headers.get('accept-language');
const detectedLang = getBrowserLanguage(acceptLanguage);

return Astro.redirect(`/${detectedLang}`);
---